# Base hostname to apply to the URLs shortened
base_hostname: http://localhost:8080

deployment:
  # Number of replicas for the backend
  replicas: 1

image:
  # Image repository
  repository: ghcr.io/webengineeringgroupi/backend
  # Image tag
  tag: master
  # Image Pull Policy (Always, IfNotPresent, Never)
  pullPolicy: Always

service:
  http:
    # Whether to create or not the HTTP service
    create: true
    # Type for the service for the HTTP backend
    type: ClusterIP
    # Port for the HTTP endpoint
    port: 8080
  grpc:
    # Whether to create or not the gRPC service
    create: true
    # Type of the service for the gRPC backend
    type: ClusterIP
    # Port for the gRPC endpoint
    port: 8081

database:
  # Whether to deploy or not the postgres database
  deploy: true
  # User for the database
  postgresqlUsername: postgres
  # Password for the database
  postgresqlPassword: ""
  # Name of the database
  postgresqlDatabase: postgres
  # Service of the postgres database
  postgresqlHost:
  # SSL mode of the Postgres DB
  ssl_mode: disable
  service:
    # Port of the database
    port: 5432

integrations:
  safebrowsing:
    # API Key for the Google SafeBrowsing integration
    apiKey:

ingress:
  http:
    # Whether to deploy the HTTP ingress or not
    enabled: true
    # Host setting for the HTTP ingress
    host:
    # Path to match for the HTTP ingress
    path: /
    # Type of path to match (Prefix, Exact)
    pathType: Prefix
    # Extra annotations for the HTTP ingress
    extra_annotations: {}
    # TLS configurations for the HTTP ingress
    tls: []
  grpc:
    # Whether to deploy the gRPC ingress or not
    enabled: true
    # Host setting for the gRPC ingress
    host:
    # Path to match for the gRPC ingress
    path: /
    # Type of path to match (Prefix, Exact)
    pathType: Prefix
    # Extra annotations for the gRPC ingress
    extra_annotations: {}
    # TLS configurations for the gRPC ingress
    tls: []
